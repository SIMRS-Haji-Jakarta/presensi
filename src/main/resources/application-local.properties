## server conf
spring.application.name=${APP_NAME:aplikasi-presensi}
server.port=${PORT:9006}

app.aes.encoder =*RSHaji#UIN
app.api.gambar = https://api.uinjkt.ac.id/ais/AmbilMedia?id=%s&name=nama&foto=foto&clazz=ais.database.model.file.FotoPegawai&property=pegawai
app.firebase-config=aplikasi-presensi-firebase-adminsdk.json
app.default.url.photo = staff/default-template.jpg
## For Windows
app.file.storage.mapping = ${FILE_STORAGE_PATH:file:///D:/EProject/aplikasi-presensi-rshaji/uploads/}
## For Linux / MacOS
#app.file.storage.mapping = ${FILE_STORAGE_PATH:file:~/Desktop/aplikasi-presensi-rshaji/uploads/}

## thymeleaf conf
spring.thymeleaf.cache=false
#spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=utf-8
spring.thymeleaf.mode=HTML
spring.devtools.add-properties=true

## db conf ais
spring.datasource.jdbcUrl=${DB_URL:jdbc:postgresql://localhost:5432/db-presensi-dev}
spring.datasource.username=${DB_USERNAME:presensi-dev}
spring.datasource.password=${DB_PASSWORD:8sSOt73zi5HP}

## db conf wdms
spring.wdms-datasource.jdbcUrl=${DB_URL_WDMS:jdbc:postgresql://localhost:5432/wdms}
spring.wdms-datasource.username=${DB_USERNAME_WDMS:presensi-dev}
spring.wdms-datasource.password=${DB_PASSWORD_WDMS:8sSOt73zi5HP}

## Konfigurasi Hibernate
#drop n create table again, good for testing, comment this in production
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximum-pool-size=100

spring.jpa.generate-ddl=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.formt_sql=false
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# uncomment this property to see the SQL statements generated
logging.level.org.hibernate.SQL=WARN
spring.jackson.serialization.indent-output=true

###### DB Decorator ######
# One of logging libraries (slf4j, jul, common, sysout)
decorator.datasource.datasource-proxy.logging=slf4j
decorator.datasource.datasource-proxy.query.enable-logging=true
decorator.datasource.datasource-proxy.query.log-level=debug
# Logger name to log all queries, default depends on chosen logging, e.g. net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener
#decorator.datasource.datasource-proxy.query.logger-name=
decorator.datasource.datasource-proxy.slow-query.enable-logging=true
decorator.datasource.datasource-proxy.slow-query.log-level=warn
#decorator.datasource.datasource-proxy.slow-query.logger-name=
# Number of seconds to consider query as slow and log it
decorator.datasource.datasource-proxy.slow-query.threshold=300
decorator.datasource.datasource-proxy.multiline=true
decorator.datasource.datasource-proxy.json-format=false
# Enable Query Metrics
decorator.datasource.datasource-proxy.count-query=false

spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=10MB

# Storage path
file.storage.presensi.path = ${STORAGE_PRESENSI_PATH:uploads/presensi}
file.storage.multimedia.path = ${STORAGE_MULTIMEDIA_PATH:uploads/multimedia}

# actuator
management.endpoints.web.exposure.include=prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application= aplikasi-presensi

# kafka
spring.kafka.bootstrap-servers=kafka.uinjkt.ac.id:9092
kafka.topic.iki=${TOPIC_IKI:iki-dev}
